Class:

A class is a template or a blueprint to create objects. It contains states called variables and behaviors called methods.
If we consider a Vehicle as an example, Vehicle has states or attributes such as number of wheels, speed, and type of fuel etc., Also has behaviors like start, break and park.

Object:

An object is an instance of class. It is an entity created by following the rules mentioned in the class.
For our example Vehicle class, We can create an object called car which has its own data for variables and methods.
The variables store data and methods performs a dedicated task by executing its statements.

Class modifiers:

 A class can be declared as public or default. 
 A java file can have any number of classes but with only one public class which has same name as file and contain main method.
 A can be declared by using class keyword and preceeding with access modifier.
 Declaring a class without its modifier is default modifier.

 Class member modifiers:

 There are 4 kinds of data access modifiers.
 1. public
 2. protected
 3. default
 4. private

 public members can be accessed within the class, within the package and out of the package. It ha wider scope.
 protected members can be accessed within the class, within the package and out of the package through sub classes only.
 default members can be accessed within the class and within the package. Its has package level scope.
 private members can be accessed within the class only.

 Abstract:

 Abstraction is the process of hiding unnecessary details and show needed information.
 Abstract class is a class which is declared with Abstract keyword.
 An abstract class cannot be instantiated.
 Abstract class can have abstract and non abstract methods.
 Abstract method is declared with abstract keyword and does not contain implementation.
 The sub class of abstract class must implement all the abstract methods from the super class.
 Example:
 startVehicle():
    Various Vehicles has their own way of starting them. 
    A bike can be started with a kick.
    A car can be started with a key.

Interfaces:
 An interface is a fully abstract class in java.
 It is used to achieve abstraction.
 We can't create object for an interface.
 Interface contains methods without implementation.
 It can have static and default methods.
 Defualt methods can be declared with a default keyword.
 Interface can extend multiple interfaces to achieve multiple inheritance.
 One class can implement multiple interfaces.
 The class which implements an interface should implement all the unimplemented methods of the interface.
 All the methods in interface by default public. It can have private methods also.